{"version":3,"file":"comlink-async.js","sourceRoot":"","sources":["../../../ui-src/lib/comlink-async.ts"],"names":[],"mappings":"AAAA,6DAA6D;AAC7D,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAmB,MAAM,SAAS,CAAC;AAEnE,MAAM,oBAAoB,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAE3D,MAAM,CAAC,MAAM,6BAA6B,GACG;IAC5C,SAAS,EAAE,CAAC,KAAU,EAAgC,EAAE,CACvD,KAAK,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,UAAU;IAC/F,KAAK,CAAC,CAAC,WAAW,CAAC,GAAG;QACrB,MAAM,QAAQ,GAAG,oBAAoB,CAAC,WAAW,CAAC,GAAG,CAAuB,CAAC;QAC7E,SAAU,CAAC;YACV,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC9C,IAAI,IAAI,EAAE,CAAC;gBACV,MAAM;YACP,CAAC;iBAAM,CAAC;gBACP,MAAM,KAAK,CAAC;YACb,CAAC;QACF,CAAC;IACF,CAAC;IACD,SAAS,CAAC,GAAG;QACZ,OAAO,oBAAoB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC;CACD,CAAC;AAEF,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,EAAE,6BAA6B,CAAC,CAAC","sourcesContent":["// See https://github.com/GoogleChromeLabs/comlink/issues/435\nimport { transferHandlers, proxy, TransferHandler } from 'comlink';\n\nconst proxyTransferHandler = transferHandlers.get('proxy');\n\nexport const asyncGeneratorTransferHandler:\n\tTransferHandler<AsyncGenerator<any>, any> = {\n\tcanHandle: (value: any): value is AsyncGenerator<any> =>\n\t\tvalue && typeof value.next === 'function' && typeof value[Symbol.asyncIterator] === 'function',\n\tasync *deserialize(obj) {\n\t\tconst iterator = proxyTransferHandler.deserialize(obj) as AsyncIterator<any>;\n\t\tfor (; ;) {\n\t\t\tconst { value, done } = await iterator.next();\n\t\t\tif (done) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tyield value;\n\t\t\t}\n\t\t}\n\t},\n\tserialize(obj) {\n\t\treturn proxyTransferHandler.serialize(proxy(obj));\n\t},\n};\n\ntransferHandlers.set('asyncGenerator', asyncGeneratorTransferHandler);\n"]}