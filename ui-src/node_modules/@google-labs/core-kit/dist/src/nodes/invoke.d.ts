/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import type { InputValues, OutputValues, NodeHandlerContext, BreadboardCapability, GraphDescriptor } from "@google-labs/breadboard";
import { BoardRunner } from "@google-labs/breadboard";
export type InvokeNodeInputs = InputValues & {
    $board?: string | BreadboardCapability | GraphDescriptor;
    path?: string;
    board?: BreadboardCapability;
    graph?: GraphDescriptor;
};
export declare const relativeBaseURL: (context: NodeHandlerContext) => URL;
export declare const loadBoardFromPath: (path: string, context: NodeHandlerContext) => Promise<BoardRunner>;
declare const _default: {
    describe: (inputs?: InputValues) => Promise<{
        inputSchema: import("@google-labs/breadboard").Schema;
        outputSchema: import("@google-labs/breadboard").Schema;
    }>;
    invoke: (inputs: InputValues, context: NodeHandlerContext) => Promise<OutputValues>;
};
export default _default;
//# sourceMappingURL=invoke.d.ts.map