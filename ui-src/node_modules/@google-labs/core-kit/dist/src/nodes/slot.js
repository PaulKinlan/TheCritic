/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { BoardRunner } from "@google-labs/breadboard";
import { SchemaBuilder } from "@google-labs/breadboard/kits";
export default {
    describe: async (inputs) => ({
        inputSchema: new SchemaBuilder()
            .setAdditionalProperties(true)
            .addInputs(inputs)
            .addProperty("slot", {
            title: "slot",
            description: "The slot to run.",
            type: "string",
        })
            .build(),
        outputSchema: new SchemaBuilder().setAdditionalProperties(true).build(),
    }),
    invoke: async (inputs, context) => {
        const { slot, ...args } = inputs;
        if (!slot)
            throw new Error("To use a slot, we need to specify its name");
        const graph = context.slots && context.slots[slot];
        if (!graph)
            throw new Error(`No graph found for slot "${slot}"`);
        const slottedBreadboard = await BoardRunner.fromGraphDescriptor(graph);
        return await slottedBreadboard.runOnce(args, context);
    },
};
//# sourceMappingURL=slot.js.map