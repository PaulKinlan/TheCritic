/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { RunResult } from "./run.js";
import { GraphMetadata, InputValues, NodeDescriptor, NodeHandlerContext, NodeValue, OutputValues, Schema, TraversalResult } from "./types.js";
export declare const createErrorMessage: (inputName: string, metadata: GraphMetadata | undefined, required: boolean) => string;
export declare const bubbleUpInputsIfNeeded: (metadata: GraphMetadata, context: NodeHandlerContext, descriptor: NodeDescriptor, result: TraversalResult) => Promise<void>;
export declare const createBubbleHandler: (metadata: GraphMetadata, context: NodeHandlerContext, descriptor: NodeDescriptor) => (name: string, schema: Schema, required: boolean) => Promise<any>;
export type InputSchemaHandler = (name: string, schema: Schema, required: boolean) => Promise<NodeValue>;
export declare class InputSchemaReader {
    #private;
    constructor(currentOutputs: OutputValues, inputs: InputValues);
    read(handler: InputSchemaHandler): Promise<OutputValues>;
}
export declare class RequestedInputsManager {
    #private;
    constructor(context: NodeHandlerContext);
    createHandler(next: (result: RunResult) => Promise<void>, result: TraversalResult): (name: string, schema: Schema, node: NodeDescriptor) => Promise<NodeValue>;
}
//# sourceMappingURL=bubble.d.ts.map