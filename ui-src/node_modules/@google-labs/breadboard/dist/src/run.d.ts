/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import type { InputValues, NodeDescriptor, OutputValues, TraversalResult, BreadboardRunResult, RunResultType, RunState } from "./types.js";
export declare class RunResult implements BreadboardRunResult {
    #private;
    constructor(state: TraversalResult, type: RunResultType, runState: RunState | undefined, invocationId: number);
    get invocationId(): number;
    get type(): RunResultType;
    get node(): NodeDescriptor;
    get inputArguments(): InputValues;
    set inputs(inputs: InputValues);
    get outputs(): OutputValues;
    get state(): TraversalResult;
    save(): Promise<string>;
    get runState(): RunState | undefined;
    get timestamp(): number;
    isAtExitNode(): boolean;
    static load(stringifiedResult: string): RunResult;
}
export declare class InputStageResult extends RunResult {
    constructor(state: TraversalResult, runState: RunState | undefined, invocationId: number);
    get outputs(): OutputValues;
}
export declare class OutputStageResult extends RunResult {
    constructor(state: TraversalResult, invocationId: number);
    get inputArguments(): InputValues;
    set inputs(inputs: InputValues);
}
//# sourceMappingURL=run.d.ts.map