/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { GraphDescriptor, SubGraphs } from "./types.js";
export type BoardLoaderArguments = {
    base: URL;
    graphs?: SubGraphs;
};
export type BoardLoaderType = "file" | "fetch" | "hash" | "unknown";
export type BoardLoaders = Record<BoardLoaderType, (path: string) => Promise<GraphDescriptor>>;
export type ResolverResult = {
    type: BoardLoaderType;
    location: string;
    href: string;
};
export declare const resolveURL: (base: URL, urlString: string, results: ResolverResult[]) => boolean;
export declare const loadFromFile: (path: string) => Promise<any>;
export declare const loadWithFetch: (url: string) => Promise<any>;
export declare class BoardLoadingStep {
    loaders: BoardLoaders;
    graphs?: SubGraphs;
    constructor(graphs?: SubGraphs);
    load(result: ResolverResult): Promise<GraphDescriptor>;
}
export type BoardLoaderResult = {
    graph: GraphDescriptor;
    isSubgraph: boolean;
};
export declare class BoardLoader {
    #private;
    constructor({ base, graphs }: BoardLoaderArguments);
    load(urlString: string): Promise<BoardLoaderResult>;
}
//# sourceMappingURL=loader.d.ts.map