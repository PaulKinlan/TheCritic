/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import type { Edge, QueuedNodeValuesState, NodeIdentifier, InputValues, OutputValues, NodeValuesQueuesMap } from "../types.js";
export declare class MachineEdgeState implements QueuedNodeValuesState {
    #private;
    state: NodeValuesQueuesMap;
    constants: NodeValuesQueuesMap;
    /**
     * Processes outputs by wiring them to the destinations according
     * to the supplied edges. Assumes that the outputs were generated by
     * the from node.
     *
     * @param opportunites {Edge[]} Edges to process
     * @param outputs {OutputValues} Outputs to wire
     */
    wireOutputs(opportunites: Edge[], outputs: OutputValues): void;
    /**
     * Returns the available inputs for a given node.
     *
     * @param nodeId {NodeIdentifier} The node to get the inputs for.
     * @returns {InputValues} The available inputs.
     */
    getAvailableInputs(nodeId: NodeIdentifier): InputValues;
    /**
     * Shifts inputs from the queues. Leaves constants as is.
     *
     * @param nodeId {NodeIdentifier} The node to shift the inputs for.
     * @param inputs {InputValues} The inputs that are used.
     */
    useInputs(nodeId: NodeIdentifier, inputs: InputValues): void;
}
//# sourceMappingURL=state.d.ts.map