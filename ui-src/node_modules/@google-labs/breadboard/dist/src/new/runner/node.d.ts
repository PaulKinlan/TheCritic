/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { GraphDescriptor, GraphMetadata, NodeDescriptor, Schema, NodeDescriberResult } from "@google-labs/breadboard";
import { InputValues, OutputValues, NodeHandler, NodeTypeIdentifier, Serializeable, AbstractNode, EdgeInterface, OptionalIdConfiguration, ScopeInterface } from "./types.js";
import { Scope } from "./scope.js";
export declare class BaseNode<I extends InputValues = InputValues, O extends OutputValues = OutputValues> extends AbstractNode<I, O> implements Serializeable {
    #private;
    id: string;
    type: string;
    outgoing: EdgeInterface[];
    incoming: EdgeInterface[];
    configuration: Partial<I>;
    constructor(handler: NodeTypeIdentifier | NodeHandler<I, O>, scope: ScopeInterface, config?: Partial<I> & OptionalIdConfiguration);
    addIncomingEdge(from: AbstractNode, out: string, in_: string, constant?: boolean, schema?: Schema): void;
    invoke(inputs: I, dynamicScope?: Scope): Promise<O>;
    describe(scope?: ScopeInterface, inputs?: InputValues, inputSchema?: Schema, outputSchema?: Schema): Promise<NodeDescriberResult | undefined>;
    serialize(metadata?: GraphMetadata): Promise<GraphDescriptor>;
    serializeNode(): Promise<[NodeDescriptor, GraphDescriptor?]>;
}
//# sourceMappingURL=node.d.ts.map