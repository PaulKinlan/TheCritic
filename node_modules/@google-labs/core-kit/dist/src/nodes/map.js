/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { Board, } from "@google-labs/breadboard";
export default async (inputs, context) => {
    const { list, board } = inputs;
    if (!Array.isArray(list)) {
        throw new Error(`Expected list to be an array, but got ${list}`);
    }
    if (!board)
        return { list };
    const runnableBoard = await Board.fromBreadboardCapability(board);
    const result = await Promise.all(list.map(async (item, index) => {
        // TODO: Express as a multi-turn `run`.
        const newContext = {
            ...context,
            invocationPath: [...(context?.invocationPath || []), index],
        };
        const outputs = await runnableBoard.runOnce({ item, index, list }, newContext);
        return outputs;
    }));
    return { list: result };
};
//# sourceMappingURL=map.js.map