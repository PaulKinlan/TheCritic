/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { InputValues, NodeDescriberFunction, NodeValue, OutputValues, Schema } from "@google-labs/breadboard";
export declare enum ObjectType {
    stringy = 0,
    array = 1,
    object = 2
}
type AccumulatorType = string | string[] | Record<string, NodeValue>;
export type AppendInputs = Record<string, NodeValue> & {
    accumulator: AccumulatorType;
};
export type AppendOutputs = {
    accumulator: AccumulatorType;
};
export declare const getObjectType: (value: unknown) => ObjectType;
export declare const computeInputSchema: (incomingWires: Schema) => Schema;
export declare const flattenValues: (values: InputValues) => InputValues;
export declare const appendDescriber: NodeDescriberFunction;
declare const _default: {
    describe: NodeDescriberFunction;
    invoke: (inputs: InputValues) => Promise<OutputValues>;
};
export default _default;
//# sourceMappingURL=append.d.ts.map