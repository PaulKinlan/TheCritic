/**
 * @license
 * Copyright 2024 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { KitConfig } from "./kits.js";
/**
 * The Breadboard Serve configuration.
 */
export type ServeConfig = {
    /**
     * The transport to use. Currently, only "worker" is supported.
     */
    transport: "worker";
    /**
     * The URL of the board to load. If not specified, the server will ask the
     * client for the URL.
     */
    url?: string;
    /**
     * The base URL relative to which to load the board.
     * If ran in a browser, defaults to the current URL.
     * Otherwise, defaults to invoking module's URL.
     */
    base?: URL;
    /**
     * The kits to use for serving breadboard. Accepts an array of kits or
     * proxy configurations.
     * If the kit is specified directly, it will be used as-is.
     * If the kit is specified as a proxy configuration, a proxy kit will be
     * created and and a proxy client will be started.
     */
    kits: KitConfig[];
    /**
     * Whether to enable diagnostics. Defaults to false.
     * When diagnostics are enabled, the server will send graphstart/graphend and
     * nodestart/nodeend messages to the client.
     */
    diagnostics?: boolean;
};
/**
 * Start the Breadboard run server. Currently, this function is somewhat
 * specialized to the worker transport, but (one hopes) will eventually
 * grow up to be more general and flexible.
 * @param config - The configuration for the server.
 * @returns - a promise that resolves when the server is done serving.
 */
export declare const serve: (config: ServeConfig) => Promise<void>;
/**
 * A helper function to define a serve configuration. Especially useful in
 * TypeScript, where the type of the configuration is inferred from the
 * argument.
 * @param config - The configuration for the server.
 * @returns - The configuration for the server.
 */
export declare const defineServeConfig: (config: ServeConfig) => ServeConfig;
//# sourceMappingURL=serve.d.ts.map