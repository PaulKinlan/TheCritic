/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { TraversalMachine } from "./traversal/machine.js";
import { MachineResult } from "./traversal/result.js";
export const replacer = (key, value) => {
    if (!(value instanceof Map))
        return value;
    return { $type: "Map", value: Array.from(value.entries()) };
};
export const reviver = (key, value) => {
    const { $type } = (value || {});
    return $type == "Map" && value.value
        ? new Map(value.value)
        : value;
};
export const saveRunnerState = async (type, result) => {
    const state = await TraversalMachine.prepareToSave(result);
    return JSON.stringify({ state, type }, replacer);
};
export const loadRunnerState = (s) => {
    const { state: o, type } = JSON.parse(s, reviver);
    const state = MachineResult.fromObject(o);
    return { state, type };
};
//# sourceMappingURL=serialization.js.map