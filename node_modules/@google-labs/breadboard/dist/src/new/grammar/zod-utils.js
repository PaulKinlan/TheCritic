/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { z } from "zod";
import { zodToJsonSchema } from "zod-to-json-schema";
/**
 * This post processed JSON schema generated from Zod:
 *  - adds a title to the schema or any field by parsing the description as
 *    `${title}: ${description}`
 *  - removes $schema field
 *
 * @param zod Zod schema
 * @returns Post processed `Schema` object
 */
export function zodToSchema(zod) {
    if (!isZodSchema(zod))
        return zod;
    const schema = zodToJsonSchema(zod);
    delete schema.$schema;
    // Recursively visit all fields and add titles from descriptions
    const addTitles = (schema) => {
        if (schema.description) {
            const [title, description] = schema.description.split(":", 2);
            schema.title = title.trim();
            schema.description = description.trim();
        }
        if (schema.properties)
            Object.values(schema.properties).forEach((property) => addTitles(property));
    };
    addTitles(schema);
    return schema;
}
export function convertZodToSchemaInConfig(config, factory) {
    if (config.schema && config.schema instanceof z.ZodType) {
        config.schema = zodToSchema(config.schema);
    }
    return factory(config);
}
function isZodSchema(object) {
    return typeof object?.parse === "function";
}
//# sourceMappingURL=zod-utils.js.map