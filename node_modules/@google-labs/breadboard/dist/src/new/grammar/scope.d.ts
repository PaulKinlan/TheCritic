/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import { GraphDescriptor, GraphMetadata } from "@google-labs/breadboard";
import { BuilderScopeInterface, ClosureEdge } from "./types.js";
import { AbstractNode, ScopeConfig } from "../runner/types.js";
import { Scope } from "../runner/scope.js";
import { BuilderNode } from "./node.js";
/**
 * Adds syntactic sugar to support unproxying and serialization of nodes/graphs.
 */
export declare class BuilderScope extends Scope implements BuilderScopeInterface {
    #private;
    parentLambdaNode?: BuilderNode;
    constructor(config?: ScopeConfig & {
        serialize?: boolean;
        parentLambda?: BuilderNode;
    });
    serialize(metadata?: GraphMetadata, node?: AbstractNode): Promise<GraphDescriptor>;
    serializing(): boolean;
    asScopeFor<T extends (...args: any[]) => any>(fn: T): T;
    addClosureEdge(edge: ClosureEdge): void;
    getClosureEdges(): ClosureEdge[];
}
//# sourceMappingURL=scope.d.ts.map