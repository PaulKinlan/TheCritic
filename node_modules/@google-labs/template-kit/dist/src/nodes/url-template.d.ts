/**
 * @license
 * Copyright 2023 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
import type { NodeDescriberFunction, NodeHandlerFunction, Schema } from "@google-labs/breadboard";
/**
 * A simple node for making valid URLs out of templates.
 */
export type UrlTemplateOutputs = {
    url: string;
};
export type UrlTemplateInputs = {
    /**
     * The URL template to use
     * @example https://example.com/{path}
     */
    template: string;
};
export declare const urlTemplateHandler: NodeHandlerFunction;
declare const operators: readonly [{
    readonly prefix: "+";
    readonly description: "reserved expansion";
}, {
    readonly prefix: "#";
    readonly description: "fragment expansion";
}, {
    readonly prefix: ".";
    readonly description: "label expansion, dot-prefixed";
}, {
    readonly prefix: "/";
    readonly description: "path segment expansion";
}, {
    readonly prefix: ";";
    readonly description: "path-style parameter expansion";
}, {
    readonly prefix: "?";
    readonly description: "form-style query expansion";
}, {
    readonly prefix: "&";
    readonly description: "form-style query continuation";
}];
export type UrlTemplateParameters = {
    name: string;
    operator?: (typeof operators)[number];
}[];
export declare const getUrlTemplateParameters: (template?: string) => UrlTemplateParameters;
export declare const computeInputSchema: (template?: string) => Schema;
export declare const urlTemplateDescriber: NodeDescriberFunction;
declare const _default: {
    describe: NodeDescriberFunction;
    invoke: NodeHandlerFunction;
};
export default _default;
//# sourceMappingURL=url-template.d.ts.map